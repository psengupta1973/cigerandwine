  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>nodecellar/public/lib/underscore-min.js at master · ccoenraets/nodecellar · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="assets" href="https://a248.e.akamai.net/assets.github.com/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="HtUMZ+iizo1G3623HJqD9VqKxtli+8iflDmGYO2n6O0=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-0c2e6b2f619f4aafd0dc861f56d66b8fc3b130eb.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-825f026ec649c1aabce8f2d0390fc4d3bb870964.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-4c434fa1705bf526e191eec0cd8fab1a5ce3e326.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-fa0e576ffff9e151472d56e5f4512a9053a68a12.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="51c0b4a5726a8cb47213bcf36c3dd471">

        <link data-pjax-transient rel='permalink' href='/ccoenraets/nodecellar/blob/e249ca3be83e75a26710d81ce5ad95c3404f78d5/public/lib/underscore-min.js'>
    <meta property="og:title" content="nodecellar"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/ccoenraets/nodecellar"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/3f30c25cbbc01a086a653b5d90535f19?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="nodecellar - Sample application built with Backbone.js, Twitter Bootstrap, Node.js, Express, MongoDB"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="ccoenraets/nodecellar"/>

    <meta name="description" content="nodecellar - Sample application built with Backbone.js, Twitter Bootstrap, Node.js, Express, MongoDB" />


    <meta content="384156" name="octolytics-dimension-user_id" /><meta content="ccoenraets" name="octolytics-dimension-user_login" /><meta content="6077453" name="octolytics-dimension-repository_id" /><meta content="ccoenraets/nodecellar" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="6077453" name="octolytics-dimension-repository_network_root_id" /><meta content="ccoenraets/nodecellar" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/ccoenraets/nodecellar/commits/master.atom" rel="alternate" title="Recent Commits to nodecellar:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob linux vis-public env-production  ">
    <div id="wrapper">

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
      <a class="button primary" href="/signup">Sign up</a>
      <a class="button" href="/login?return_to=%2Fccoenraets%2Fnodecellar%2Fblob%2Fmaster%2Fpublic%2Flib%2Funderscore-min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="http://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="octicon octicon-gear "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
      data-repo="ccoenraets/nodecellar"
      data-branch="master"
      data-sha="8a863b44af61b5d27e95529f91080071f934dac1"
  >

    <input type="hidden" name="nwo" value="ccoenraets/nodecellar" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

  <div class="divider-vertical"></div>

</form>
    </div>

  </div>
</div>


      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fccoenraets%2Fnodecellar"
        class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/ccoenraets/nodecellar/stargazers">
        599
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fccoenraets%2Fnodecellar"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/ccoenraets/nodecellar/network" class="social-count">
        330
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-octicon octicon-repo"></span>
                <span class="author vcard">
                  <a href="/ccoenraets" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">ccoenraets</span>
                  </a></span> /
                <strong><a href="/ccoenraets/nodecellar" class="js-current-repository">nodecellar</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li class="pulse-nav"><a href="/ccoenraets/nodecellar/pulse" class="js-selected-navigation-item " data-selected-links="pulse /ccoenraets/nodecellar/pulse" rel="nofollow"><span class="octicon octicon-pulse"></span></a></li>
    <li><a href="/ccoenraets/nodecellar" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /ccoenraets/nodecellar">Code</a></li>
    <li><a href="/ccoenraets/nodecellar/network" class="js-selected-navigation-item " data-selected-links="repo_network /ccoenraets/nodecellar/network">Network</a></li>
    <li><a href="/ccoenraets/nodecellar/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /ccoenraets/nodecellar/pulls">Pull Requests <span class='counter'>2</span></a></li>

      <li><a href="/ccoenraets/nodecellar/issues" class="js-selected-navigation-item " data-selected-links="repo_issues /ccoenraets/nodecellar/issues">Issues <span class='counter'>8</span></a></li>



    <li><a href="/ccoenraets/nodecellar/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /ccoenraets/nodecellar/graphs">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/ccoenraets/nodecellar/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /ccoenraets/nodecellar/tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="octicon octicon-git-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item selected">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/ccoenraets/nodecellar/blob/master/public/lib/underscore-min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/ccoenraets/nodecellar" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /ccoenraets/nodecellar">Files</a></li>
    <li><a href="/ccoenraets/nodecellar/commits/master" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /ccoenraets/nodecellar/commits/master">Commits</a></li>
    <li><a href="/ccoenraets/nodecellar/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /ccoenraets/nodecellar/branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:3d9526fedfc9f3cea2a8e21190a01e5c -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:3d9526fedfc9f3cea2a8e21190a01e5c -->

<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <a href="/ccoenraets/nodecellar/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ccoenraets/nodecellar" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">nodecellar</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ccoenraets/nodecellar/tree/master/public" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">public</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ccoenraets/nodecellar/tree/master/public/lib" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><strong class="final-path">underscore-min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="public/lib/underscore-min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
        </div>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/3f30c25cbbc01a086a653b5d90535f19?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/ccoenraets" rel="author">ccoenraets</a></span>
    <time class="js-relative-date" datetime="2012-10-04T08:25:02-07:00" title="2012-10-04 08:25:02">October 04, 2012</time>
    <div class="commit-title">
        <a href="/ccoenraets/nodecellar/commit/752202b598c0aebc3e02949340b5fbcb27ccc035" class="message">Initial Commit</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li class="facebox-user-list-item">
          <img height="24" src="https://secure.gravatar.com/avatar/3f30c25cbbc01a086a653b5d90535f19?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/ccoenraets">ccoenraets</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/ccoenraets/nodecellar/blob/e249ca3be83e75a26710d81ce5ad95c3404f78d5/public/lib/underscore-min.js" data-title="nodecellar/public/lib/underscore-min.js at master · ccoenraets/nodecellar · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>5 lines (5 sloc)</span>
                <span>13.43 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/ccoenraets/nodecellar/raw/master/public/lib/underscore-min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/ccoenraets/nodecellar/blame/master/public/lib/underscore-min.js" class="button minibutton ">Blame</a>
                  <a href="/ccoenraets/nodecellar/commits/master/public/lib/underscore-min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="c1">//     Underscore.js 1.4.1</span></div><div class='line' id='LC2'><span class="c1">//     http://underscorejs.org</span></div><div class='line' id='LC3'><span class="c1">//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.</span></div><div class='line' id='LC4'><span class="c1">//     Underscore may be freely distributed under the MIT license.</span></div><div class='line' id='LC5'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">concat</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">unshift</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">forEach</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">map</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">reduce</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">reduceRight</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">filter</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">every</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">some</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nx">T</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">T</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrapped</span><span class="o">=</span><span class="nx">e</span><span class="p">};</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">exports</span><span class="o">=</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">T</span><span class="p">),</span><span class="nx">exports</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="nx">T</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="nx">T</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">VERSION</span><span class="o">=</span><span class="s2">&quot;1.4.1&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">each</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">forEach</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">forEach</span><span class="o">===</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">===</span><span class="nx">n</span><span class="p">)</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">===</span><span class="nx">n</span><span class="p">)</span><span class="k">return</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">collect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="o">===</span><span class="nx">p</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">r</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)}),</span><span class="nx">r</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">reduce</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">foldl</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">inject</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduce</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)),</span><span class="nx">i</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="nx">i</span><span class="o">?</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Reduce of empty array with no initial value&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">reduceRight</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">foldr</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduceRight</span><span class="o">===</span><span class="nx">v</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)),</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduceRight</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">reduceRight</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">!==+</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="nx">o</span><span class="p">[</span><span class="o">--</span><span class="nx">s</span><span class="p">]</span><span class="o">:--</span><span class="nx">s</span><span class="p">,</span><span class="nx">i</span><span class="o">?</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Reduce of empty array with no initial value&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">detect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">;</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">))</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">r</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">filter</span><span class="o">===</span><span class="nx">m</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">r</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">reject</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">r</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">every</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">all</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">t</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">identity</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">every</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">)))</span><span class="k">return</span> <span class="nx">n</span><span class="p">}),</span><span class="o">!!</span><span class="nx">i</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">some</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">any</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">t</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">identity</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">some</span><span class="o">===</span><span class="nx">y</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">some</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">)))</span><span class="k">return</span> <span class="nx">n</span><span class="p">}),</span><span class="o">!!</span><span class="nx">i</span><span class="p">)};</span><span class="nx">T</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">include</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="nx">t</span><span class="p">}),</span><span class="nx">n</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">invoke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]).</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">pluck</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">t</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===+</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">65535</span><span class="p">)</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">-</span><span class="kc">Infinity</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">computed</span><span class="o">:-</span><span class="kc">Infinity</span><span class="p">};</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;=</span><span class="nx">r</span><span class="p">.</span><span class="nx">computed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">computed</span><span class="o">:</span><span class="nx">o</span><span class="p">})}),</span><span class="nx">r</span><span class="p">.</span><span class="nx">value</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===+</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">65535</span><span class="p">)</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="kc">Infinity</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">computed</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">};</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">.</span><span class="nx">computed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">computed</span><span class="o">:</span><span class="nx">o</span><span class="p">})}),</span><span class="nx">r</span><span class="p">.</span><span class="nx">value</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">shuffle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">random</span><span class="p">(</span><span class="nx">n</span><span class="o">++</span><span class="p">),</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}),</span><span class="nx">r</span><span class="p">};</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">]}};</span><span class="nx">T</span><span class="p">.</span><span class="nx">sortBy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">pluck</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">criteria</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}).</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">criteria</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">criteria</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">!==</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">||</span><span class="nx">n</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="o">||</span><span class="nx">r</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">index</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">index</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">}),</span><span class="s2">&quot;value&quot;</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">t</span><span class="p">)}),</span><span class="nx">i</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">groupBy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){(</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="p">[]).</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">)})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">countBy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">++</span><span class="p">})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">sortedIndex</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">identity</span><span class="o">:</span><span class="nx">k</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">o</span><span class="o">&gt;&gt;&gt;</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">u</span><span class="p">])</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">o</span><span class="o">=</span><span class="nx">u</span><span class="p">}</span><span class="k">return</span> <span class="nx">s</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">toArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">T</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">[]},</span><span class="nx">T</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">T</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">length</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">first</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">head</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">take</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">T</span><span class="p">.</span><span class="nx">initial</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">n</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">t</span><span class="p">))},</span><span class="nx">T</span><span class="p">.</span><span class="nx">last</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]},</span><span class="nx">T</span><span class="p">.</span><span class="nx">rest</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">tail</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">drop</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">n</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">t</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">compact</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="p">})};</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">A</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">n</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">flatten</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,[])},</span><span class="nx">T</span><span class="p">.</span><span class="nx">without</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">difference</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))},</span><span class="nx">T</span><span class="p">.</span><span class="nx">uniq</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">?!</span><span class="nx">r</span><span class="o">||</span><span class="nx">o</span><span class="p">[</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">n</span><span class="o">:!</span><span class="nx">T</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">])}),</span><span class="nx">s</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">union</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">uniq</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">T</span><span class="p">.</span><span class="nx">intersection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">uniq</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">})})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">difference</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">T</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)})},</span><span class="nx">T</span><span class="p">.</span><span class="nx">zip</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">pluck</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;length&quot;</span><span class="p">)),</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">pluck</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">object</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">t</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">]]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">n</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">!=</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">sortedIndex</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="nx">r</span><span class="o">:-</span><span class="mi">1</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">+</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="o">===</span><span class="nx">w</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">i</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">((</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">),</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">)</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="nx">n</span><span class="p">;</span><span class="k">return</span> <span class="nx">s</span><span class="p">};</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">bind</span><span class="o">===</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">)</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">r</span><span class="p">){</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)));</span><span class="k">return</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">bindAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">functions</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">N</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">memoize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">t</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">identity</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">?</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">delay</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="nx">t</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">defer</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">delay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">T</span><span class="p">,[</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">)))},</span><span class="nx">T</span><span class="p">.</span><span class="nx">throttle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">debounce</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="o">=</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)),</span><span class="nx">a</span><span class="p">()};</span><span class="k">return</span> <span class="nx">i</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">t</span><span class="p">)),</span><span class="nx">s</span><span class="o">?</span><span class="nx">o</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)),</span><span class="nx">a</span><span class="p">(),</span><span class="nx">u</span><span class="p">}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">debounce</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">))},</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">;</span><span class="k">return</span> <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">)),</span><span class="nx">i</span><span class="p">}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">once</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">t</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">)}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">wrap</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">)}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">compose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">)];</span><span class="k">return</span> <span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">after</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">t</span><span class="p">()</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">e</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}},</span><span class="nx">T</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">S</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="nb">Object</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Invalid object&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">pairs</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]]</span><span class="o">=</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">functions</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">methods</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">sort</span><span class="p">()},</span><span class="nx">T</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">t</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">]}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">pick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">])}),</span><span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">omit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">t</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">])}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">()</span><span class="o">:</span><span class="nx">T</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">tap</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="p">};</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="o">!==</span><span class="mi">0</span><span class="o">||</span><span class="mi">1</span><span class="o">/</span><span class="nx">e</span><span class="o">==</span><span class="mi">1</span><span class="o">/</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="nx">t</span><span class="p">;</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nx">T</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">),</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">T</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;[object String]&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">==</span><span class="nb">String</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;[object Number]&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">!=+</span><span class="nx">e</span><span class="o">?</span><span class="nx">t</span><span class="o">!=+</span><span class="nx">t</span><span class="o">:</span><span class="nx">e</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="o">/</span><span class="nx">e</span><span class="o">==</span><span class="mi">1</span><span class="o">/</span><span class="nx">t</span><span class="o">:</span><span class="nx">e</span><span class="o">==+</span><span class="nx">t</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;[object Date]&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;[object Boolean]&quot;</span><span class="o">:</span><span class="k">return</span><span class="o">+</span><span class="nx">e</span><span class="o">==+</span><span class="nx">t</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;[object RegExp]&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">source</span><span class="o">==</span><span class="nx">t</span><span class="p">.</span><span class="nx">source</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">global</span><span class="o">==</span><span class="nx">t</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">multiline</span><span class="o">==</span><span class="nx">t</span><span class="p">.</span><span class="nx">multiline</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="o">==</span><span class="nx">t</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">==</span><span class="nx">t</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">==</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="o">==</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="k">while</span><span class="p">(</span><span class="nx">o</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)))</span><span class="k">break</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">constructor</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span> <span class="k">instanceof</span> <span class="nx">f</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)){</span><span class="nx">o</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)))</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">t</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="o">--</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="nx">u</span><span class="o">=!</span><span class="nx">o</span><span class="p">}}</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">r</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">u</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">isEqual</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">M</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,[],[])},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isEmpty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArray</span><span class="o">=</span><span class="nx">E</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isObject</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="nb">Object</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">N</span><span class="p">([</span><span class="s2">&quot;Arguments&quot;</span><span class="p">,</span><span class="s2">&quot;Function&quot;</span><span class="p">,</span><span class="s2">&quot;String&quot;</span><span class="p">,</span><span class="s2">&quot;Number&quot;</span><span class="p">,</span><span class="s2">&quot;Date&quot;</span><span class="p">,</span><span class="s2">&quot;RegExp&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">T</span><span class="p">[</span><span class="s2">&quot;is&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;[object &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">}}),</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArguments</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">isArguments</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="o">&amp;&amp;!!</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;callee&quot;</span><span class="p">)}),</span><span class="k">typeof</span> <span class="sr">/./</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">e</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">}),</span><span class="nx">T</span><span class="p">.</span><span class="nb">isFinite</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nb">isNaN</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!=+</span><span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isBoolean</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="nx">e</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;[object Boolean]&quot;</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isNull</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="kc">null</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">isUndefined</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">has</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">times</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)},</span><span class="nx">T</span><span class="p">.</span><span class="nx">random</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">|</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">))};</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="p">{</span><span class="nx">escape</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;amp;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;lt;&quot;</span><span class="p">,</span><span class="s2">&quot;&gt;&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;gt;&quot;</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s2">&quot;&amp;quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&#39;&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;#x27;&quot;</span><span class="p">,</span><span class="s2">&quot;/&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;#x2F;&quot;</span><span class="p">}};</span><span class="nx">_</span><span class="p">.</span><span class="nx">unescape</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">invert</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">escape</span><span class="p">);</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="p">{</span><span class="nx">escape</span><span class="o">:</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">T</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">escape</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="nx">unescape</span><span class="o">:</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">T</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">unescape</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">)};</span><span class="nx">T</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;escape&quot;</span><span class="p">,</span><span class="s2">&quot;unescape&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">T</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">t</span><span class="p">]})}}),</span><span class="nx">T</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">mixin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">N</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">functions</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">];</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">e</span><span class="p">))}})};</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">uniqueId</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">P</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">templateSettings</span><span class="o">=</span><span class="p">{</span><span class="nx">evaluate</span><span class="o">:</span><span class="sr">/&lt;%([\s\S]+?)%&gt;/g</span><span class="p">,</span><span class="nx">interpolate</span><span class="o">:</span><span class="sr">/&lt;%=([\s\S]+?)%&gt;/g</span><span class="p">,</span><span class="nx">escape</span><span class="o">:</span><span class="sr">/&lt;%-([\s\S]+?)%&gt;/g</span><span class="p">};</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="sr">/(.)^/</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;&#39;&quot;</span><span class="o">:</span><span class="s2">&quot;&#39;&quot;</span><span class="p">,</span><span class="s2">&quot;\\&quot;</span><span class="o">:</span><span class="s2">&quot;\\&quot;</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="o">:</span><span class="s2">&quot;r&quot;</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="o">:</span><span class="s2">&quot;n&quot;</span><span class="p">,</span><span class="s2">&quot;	&quot;</span><span class="o">:</span><span class="s2">&quot;t&quot;</span><span class="p">,</span><span class="s2">&quot;\u2028&quot;</span><span class="o">:</span><span class="s2">&quot;u2028&quot;</span><span class="p">,</span><span class="s2">&quot;\u2029&quot;</span><span class="o">:</span><span class="s2">&quot;u2029&quot;</span><span class="p">},</span><span class="nx">j</span><span class="o">=</span><span class="sr">/\\|&#39;|\r|\n|\t|\u2028|\u2029/g</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">template</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">defaults</span><span class="p">({},</span><span class="nx">n</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">templateSettings</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">([(</span><span class="nx">n</span><span class="p">.</span><span class="nx">escape</span><span class="o">||</span><span class="nx">H</span><span class="p">).</span><span class="nx">source</span><span class="p">,(</span><span class="nx">n</span><span class="p">.</span><span class="nx">interpolate</span><span class="o">||</span><span class="nx">H</span><span class="p">).</span><span class="nx">source</span><span class="p">,(</span><span class="nx">n</span><span class="p">.</span><span class="nx">evaluate</span><span class="o">||</span><span class="nx">H</span><span class="p">).</span><span class="nx">source</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;|$&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;__p+=&#39;&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">){</span><span class="nx">s</span><span class="o">+=</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">u</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">[</span><span class="nx">e</span><span class="p">]}),</span><span class="nx">s</span><span class="o">+=</span><span class="nx">n</span><span class="o">?</span><span class="s2">&quot;&#39;+\n((__t=(&quot;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;))==null?&#39;&#39;:_.escape(__t))+\n&#39;&quot;</span><span class="o">:</span><span class="nx">r</span><span class="o">?</span><span class="s2">&quot;&#39;+\n((__t=(&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;))==null?&#39;&#39;:__t)+\n&#39;&quot;</span><span class="o">:</span><span class="nx">o</span><span class="o">?</span><span class="s2">&quot;&#39;;\n&quot;</span><span class="o">+</span><span class="nx">o</span><span class="o">+</span><span class="s2">&quot;\n__p+=&#39;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">}),</span><span class="nx">s</span><span class="o">+=</span><span class="s2">&quot;&#39;;\n&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">variable</span><span class="o">||</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;with(obj||{}){\n&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;}\n&quot;</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;var __t,__p=&#39;&#39;,__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,&#39;&#39;);};\n&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;return __p;\n&quot;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">variable</span><span class="o">||</span><span class="s2">&quot;obj&quot;</span><span class="p">,</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="k">throw</span> <span class="nx">u</span><span class="p">.</span><span class="nx">source</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">u</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">T</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">T</span><span class="p">)};</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="o">=</span><span class="s2">&quot;function(&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">variable</span><span class="o">||</span><span class="s2">&quot;obj&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;){\n&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">},</span><span class="nx">T</span><span class="p">.</span><span class="nx">chain</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">chain</span><span class="p">()};</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_chain</span><span class="o">?</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">chain</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">mixin</span><span class="p">(</span><span class="nx">T</span><span class="p">),</span><span class="nx">N</span><span class="p">([</span><span class="s2">&quot;pop&quot;</span><span class="p">,</span><span class="s2">&quot;push&quot;</span><span class="p">,</span><span class="s2">&quot;reverse&quot;</span><span class="p">,</span><span class="s2">&quot;shift&quot;</span><span class="p">,</span><span class="s2">&quot;sort&quot;</span><span class="p">,</span><span class="s2">&quot;splice&quot;</span><span class="p">,</span><span class="s2">&quot;unshift&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),(</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;shift&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;splice&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">)}}),</span><span class="nx">N</span><span class="p">([</span><span class="s2">&quot;concat&quot;</span><span class="p">,</span><span class="s2">&quot;join&quot;</span><span class="p">,</span><span class="s2">&quot;slice&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">,</span><span class="nx">arguments</span><span class="p">))}}),</span><span class="nx">T</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">chain</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_chain</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_wrapped</span><span class="p">}})}).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;">
            <button type="submit" class="button">Go</button>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif" height="64" width="64">
</div>


        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="/about">About us</a></dd>
        <dd><a href="/blog">Blog</a></dd>
        <dd><a href="/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.07246s from fe19.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>
    <ul id="legal">
        <li><a href="/site/terms">Terms of Service</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/ccoenraets/nodecellar/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

    
    <span id='server_response_time' data-time='0.07285' data-host='fe19'></span>
    
  </body>
</html>

